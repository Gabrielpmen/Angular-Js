{"ast":null,"code":"import { Cliente } from '../modelo/Cliente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servico/cliente.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PrincipalComponent_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 9);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_5_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cadastrar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_input_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 10);\n  }\n}\nfunction PrincipalComponent_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 11);\n  }\n}\nfunction PrincipalComponent_input_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 12);\n  }\n}\nfunction PrincipalComponent_table_9_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 15);\n    i0.ɵɵtext(11, \"Selecionar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const c_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r9 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r8.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r8.idade);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r8.cidade);\n  }\n}\nfunction PrincipalComponent_table_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 13)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Nome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Idade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Cidade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Selecionar\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, PrincipalComponent_table_9_tr_14_Template, 12, 4, \"tr\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.clientes);\n  }\n}\nexport class PrincipalComponent {\n  // Construtor\n  constructor(servico) {\n    this.servico = servico;\n    // Objeto do tipo Cliente\n    this.cliente = new Cliente();\n    // Váriavel para visibiliade dos botões\n    this.btnCadastro = true;\n    // JSON de clientes\n    this.clientes = [];\n  }\n  // Método de seleção\n  selecionar() {\n    this.servico.selecionar().subscribe(retorno => this.clientes = retorno);\n  }\n  // Método de cadastro\n  cadastrar() {\n    this.servico.cadastrar(this.cliente).subscribe(retorno => {\n      //Cadastrar o cliente no vetor\n      this.clientes.push(retorno);\n      // Limpar formulário\n      this.cliente = new Cliente();\n      // Mensagem\n      alert('Cliente cadastrado com sucesso!');\n    });\n  }\n  // Método de inicialização\n  ngOnInit() {\n    this.selecionar();\n  }\n  static #_ = this.ɵfac = function PrincipalComponent_Factory(t) {\n    return new (t || PrincipalComponent)(i0.ɵɵdirectiveInject(i1.ClienteService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PrincipalComponent,\n    selectors: [[\"app-principal\"]],\n    decls: 10,\n    vars: 8,\n    consts: [[\"src\", \"assets/cliente.png\"], [\"type\", \"text\", \"placeholder\", \"Nome\", \"name\", \"nome\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"Idade\", \"name\", \"idade\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Cidade\", \"name\", \"cidade\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"Cadastrar\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Alterar\", \"class\", \"btn btn-warning\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Remover\", \"class\", \"btn btn-danger\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Cancelar\", \"class\", \"btn btn-secondary\", 4, \"ngIf\"], [\"class\", \"table\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Cadastrar\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Alterar\", 1, \"btn\", \"btn-warning\"], [\"type\", \"button\", \"value\", \"Remover\", 1, \"btn\", \"btn-danger\"], [\"type\", \"button\", \"value\", \"Cancelar\", 1, \"btn\", \"btn-secondary\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\"]],\n    template: function PrincipalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\");\n        i0.ɵɵelement(1, \"img\", 0);\n        i0.ɵɵelementStart(2, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.cliente.nome = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.cliente.idade = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.cliente.cidade = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, PrincipalComponent_input_5_Template, 1, 0, \"input\", 4);\n        i0.ɵɵtemplate(6, PrincipalComponent_input_6_Template, 1, 0, \"input\", 5);\n        i0.ɵɵtemplate(7, PrincipalComponent_input_7_Template, 1, 0, \"input\", 6);\n        i0.ɵɵtemplate(8, PrincipalComponent_input_8_Template, 1, 0, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, PrincipalComponent_table_9_Template, 15, 1, \"table\", 8);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.nome);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.idade);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.cidade);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.btnCadastro);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.tabela);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"img[_ngcontent-%COMP%]{\\r\\n  width: 250px;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]{\\r\\n  width: 500px;\\r\\n  margin: 30px auto;\\r\\n  text-align: center;\\r\\n}\\r\\ninput[_ngcontent-%COMP%]{\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"][_ngcontent-%COMP%]{\\r\\n  margin-right: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJpbmNpcGFsL3ByaW5jaXBhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbWd7XHJcbiAgd2lkdGg6IDI1MHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuXHJcbmZvcm17XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIG1hcmdpbjogMzBweCBhdXRvO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5pbnB1dHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiYnV0dG9uXCJde1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,mBAAmB;;;;;;;;ICM3CC,gCAA2G;IAAxBA;MAAAA;MAAA;MAAA,OAAWA,iCAAW;IAAA,EAAC;IAA1GA,iBAA2G;;;;;IAC3GA,4BAAkF;;;;;IAClFA,4BAAiF;;;;;IACjFA,4BAAqF;;;;;IAgBrFA,0BAA2C;IACrCA,YAAO;IAAAA,iBAAK;IAChBA,0BAAI;IAAAA,YAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,YAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,YAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAiCA,2BAAU;IAAAA,iBAAS;;;;;IAJpDA,eAAO;IAAPA,8BAAO;IACPA,eAAU;IAAVA,+BAAU;IACVA,eAAW;IAAXA,gCAAW;IACXA,eAAY;IAAZA,iCAAY;;;;;IAflBA,iCAAqC;IAG3BA,iBAAC;IAAAA,iBAAK;IACVA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,qBAAK;IAAAA,iBAAK;IACdA,0BAAI;IAAAA,uBAAM;IAAAA,iBAAK;IACfA,2BAAI;IAAAA,2BAAU;IAAAA,iBAAK;IAGvBA,8BAAO;IACTA,6EAMK;IACHA,iBAAQ;;;;IAPQA,gBAAa;IAAbA,yCAAa;;;ADjB/B,OAAM,MAAOC,kBAAkB;EAY/B;EAEAC,YAAoBC,OAAsB;IAAtB,YAAO,GAAPA,OAAO;IAbzB;IACA,YAAO,GAAG,IAAIJ,OAAO,EAAE;IAEvB;IACF,gBAAW,GAAW,IAAI;IAE1B;IAEA,aAAQ,GAAa,EAAE;EAKqB;EAC5C;EAEAK,UAAU;IACV,IAAI,CAACD,OAAO,CAACC,UAAU,EAAE,CACxBC,SAAS,CAACC,OAAO,IAAG,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAAC;EAC7C;EAEA;EACAE,SAAS;IACP,IAAI,CAACL,OAAO,CAACK,SAAS,CAAC,IAAI,CAACC,OAAO,CAAC,CACnCJ,SAAS,CAACC,OAAO,IAAG;MACnB;MACA,IAAI,CAACC,QAAQ,CAACG,IAAI,CAACJ,OAAO,CAAC;MAE/B;MACA,IAAI,CAACG,OAAO,GAAG,IAAIV,OAAO,EAAE;MAC5B;MACAY,KAAK,CAAC,iCAAiC,CAAC;IAEtC,CAAC,CAAC;EACJ;EAEA;EACAC,QAAQ;IACN,IAAI,CAACR,UAAU,EAAE;EACnB;EAAC;qBAxCYH,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAY;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT/BjB,4BAAM;QAENA,yBAA8B;QAC9BA,gCAAkG;QAA3BA;UAAA;QAAA,EAA0B;QAAjGA,iBAAkG;QAClGA,gCAAuG;QAA5BA;UAAA;QAAA,EAA2B;QAAtGA,iBAAuG;QACvGA,gCAAwG;QAA7BA;UAAA;QAAA,EAA4B;QAAvGA,iBAAwG;QAExGA,uEAA2G;QAC3GA,uEAAkF;QAClFA,uEAAiF;QACjFA,uEAAqF;QACrFA,iBAAO;QAIPA,wEAmBQ;;;QA/B+DA,eAA0B;QAA1BA,0CAA0B;QACtBA,eAA2B;QAA3BA,2CAA2B;QAC3BA,eAA4B;QAA5BA,4CAA4B;QAE/DA,eAAiB;QAAjBA,sCAAiB;QACnBA,eAAkB;QAAlBA,uCAAkB;QAClBA,eAAkB;QAAlBA,uCAAkB;QACjBA,eAAkB;QAAlBA,uCAAkB;QAKnCA,eAAa;QAAbA,iCAAa","names":["Cliente","i0","PrincipalComponent","constructor","servico","selecionar","subscribe","retorno","clientes","cadastrar","cliente","push","alert","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Cliente\\Desktop\\spring novo\\api-front\\src\\app\\principal\\principal.component.ts","C:\\Users\\Cliente\\Desktop\\spring novo\\api-front\\src\\app\\principal\\principal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cliente } from '../modelo/Cliente';\nimport { ClienteService } from '../servico/cliente.service';\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.css']\n})\nexport class PrincipalComponent {\n  // Objeto do tipo Cliente\n  cliente = new Cliente();\n\n  // Váriavel para visibiliade dos botões\nbtnCadastro:boolean = true;\n\n// JSON de clientes\n\nclientes:Cliente[] = [];\n\n\n// Construtor\n\nconstructor(private servico:ClienteService){}\n// Método de seleção\n\nselecionar():void{\nthis.servico.selecionar()\n.subscribe(retorno =>this.clientes = retorno);\n}\n\n// Método de cadastro\ncadastrar():void{\n  this.servico.cadastrar(this.cliente)\n  .subscribe(retorno => {\n    //Cadastrar o cliente no vetor\n    this.clientes.push(retorno);\n\n// Limpar formulário\nthis.cliente = new Cliente();\n// Mensagem\nalert('Cliente cadastrado com sucesso!')\n\n  });\n}\n\n// Método de inicialização\nngOnInit(){\n  this.selecionar();\n}\n}\n","<form>\n\n<img src=\"assets/cliente.png\">\n<input type=\"text\" placeholder=\"Nome\" class=\"form-control\" name=\"nome\" [(ngModel)]=\"cliente.nome\">\n<input type=\"number\" placeholder=\"Idade\" class=\"form-control\" name=\"idade\" [(ngModel)]=\"cliente.idade\">\n<input type=\"text\" placeholder=\"Cidade\" class=\"form-control\" name=\"cidade\" [(ngModel)]=\"cliente.cidade\">\n\n<input type=\"button\" value=\"Cadastrar\" *ngIf=\"btnCadastro\" class=\"btn btn-primary\" (click) = \"cadastrar()\">\n<input type=\"button\" value=\"Alterar\" *ngIf=\"!btnCadastro\" class=\"btn btn-warning\">\n<input type=\"button\" value=\"Remover\" *ngIf=\"!btnCadastro\" class=\"btn btn-danger\">\n<input type=\"button\" value=\"Cancelar\" *ngIf=\"!btnCadastro\" class=\"btn btn-secondary\">\n</form>\n\n\n\n<table class=\"table\" *ngIf =\"tabela\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Nome</th>\n      <th>Idade</th>\n      <th>Cidade</th>\n      <th>Selecionar</th>\n    </tr>\n  </thead>\n  <tbody>\n<tr *ngFor=\"let c of clientes; index as i\">\n  <td>{{i+1}}</td>\n  <td>{{c.nome}}</td>\n  <td>{{c.idade}}</td>\n  <td>{{c.cidade}}</td>\n  <td><button class =\"btn btn-success\">Selecionar</button></td>\n</tr>\n  </tbody>\n</table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}